"0",""
"0",""
"0","chla <- read.csv(""data/chla.csv"")"
"0",""
"0",""
"0",""
"0",""
"0","# Calculate mean abundance and standard error for Control"
"0","control_mean <- chla %>% filter(Treatment == ""Control"") %>%"
"0","  group_by(Day) %>%"
"0","  summarize(control_mean_chla = mean(chla, na.rm = TRUE))"
"0",""
"0","# Calculate differences from Control for each treatment"
"0","tot.chla_diff <- chla %>%"
"0","  left_join(control_mean, by = ""Day"") %>%"
"0","  mutate(diff_chla = chla - control_mean_chla)"
"0",""
"0","# Summarize the data for plotting"
"0","tot_chla_dynamics <- tot.chla_diff %>%"
"0","  group_by(Treatment, Day) %>%"
"0","  summarize(mean_diff_chla = mean(diff_chla, na.rm = TRUE), se = se(diff_chla)) %>%"
"0","  mutate(lower_y = mean_diff_chla - se, upper_y = mean_diff_chla + se)"
"1","[38;5;250m`summarise()` has grouped output by 'Treatment'. You can override using the `.groups` argument.[39m
"
"0","# Determine the y-axis limits to ensure alignment of zero line"
"0","y_limits <- range(tot_chla_dynamics$mean_diff_chla + tot_chla_dynamics$se, "
"0","                  tot_chla_dynamics$mean_diff_chla - tot_chla_dynamics$se)"
"0",""
"0","# Filter out the control treatment for the plot"
"0","tot_chla_dynamics_filtered <- tot_chla_dynamics %>% filter(Treatment == ""HW"")"
"0",""
"0","# Plot the data with faceting and aligned y-axis"
"0",""
"0","chla_plot <- ggplot(tot_chla_dynamics_filtered, aes(x = Day, y = mean_diff_chla, color = Treatment, fill = Treatment)) +"
"0","  geom_line(aes(group = Treatment), size = 1, color = ""blue"") +"
"0","  geom_point(size = 2, color = ""blue"") +"
"0","  geom_ribbon(aes(ymin = lower_y, ymax = upper_y, group = Treatment), alpha = 0.1, show.legend = FALSE, fill = ""blue"", color = ""blue"") +"
"0","  ylab(""Chlorophyll - a \nDifference in Âµg/L"") +"
"0","  xlab(""Day"") +"
"0","  viridis::scale_colour_viridis(name = ""Treatment"", discrete = TRUE, end = 0.8, begin = 0.1, option = ""inferno"") +"
"0","  viridis::scale_fill_viridis(name = ""Treatment"", discrete = TRUE, end = 0.8, begin = 0.1, option = ""inferno"") +"
"0","  scale_x_continuous(limits = c(-5, 40)) +"
"0","  theme_bw() +"
"0","  theme(legend.position = ""none"",                   # Remove legend"
"0","        text = element_text(size = 20),             # Increase text size for all text elements"
"0","        axis.title = element_text(size = 22),       # Increase axis title size"
"0","        plot.title = element_text(size = 24),       # Increase plot title size"
"0","        axis.text = element_text(size = 20),        # Increase axis text size"
"0","        axis.line = element_line(size = 0.5),       # Adjust axis line thickness"
"0","        panel.grid.major = element_blank(),         # Remove major gridlines"
"0","        panel.grid.minor = element_blank(),         # Remove minor gridlines"
"0","        panel.border = element_blank(),            # Remove panel borders"
"0","        panel.background = element_blank()) +      # Remove panel background"
"0","  theme_minimal(base_size = 20) +"
"0","  theme("
"0","    panel.background = element_rect(fill = ""white"", colour = ""black""),  # Set panel background"
"0","    plot.title = element_text(hjust = 0.5, margin = margin(b = 20), size = 20, face = ""bold""),  # Set plot title text size and make it bold"
"0","    axis.text = element_text(size = 30),  # Set axis text size"
"0","    axis.title = element_text(size = 30),  # Set axis title text size"
"0","    plot.tag = element_text(size = 30),"
"0","    legend.position = ""none""# Set tag size"
"0","  ) +"
"0",""
"0","  geom_hline(yintercept = 0, linetype = ""dashed"") +"
"0","  coord_cartesian(ylim = y_limits) + "
"0","  annotate(""rect"", xmin = 0, xmax = 6, ymin = -Inf, ymax = Inf, alpha = 0.3, fill = ""red"") +"
"0","  annotate(""rect"", xmin = 14, xmax = 20, ymin = -Inf, ymax = Inf, alpha = 0.3, fill = ""red"") +"
"0","  annotate(""rect"", xmin = 28, xmax = 34, ymin = -Inf, ymax = Inf, alpha = 0.3, fill = ""red"") + labs(tag = ""(a)"")"
"0",""
"0",""
