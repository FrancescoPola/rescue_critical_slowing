"0","dd_abu <- read_excel(""data/abundance_cosm.xlsx"")"
"0",""
"0",""
"0","tot.abu <- dd_abu[, c(1:6)]"
"0","tot.abu<-as.data.frame(tot.abu) "
"0","tot.abu$total.abu<- rowSums(dd_abu[, c(7:94)])"
"0",""
"0","tot.abu <- tot.abu %>% filter(Treatment != ""E/C0"","
"0","                              Day <= 38)"
"0","### Log10 abundance"
"0","tot.abu$tot.abu_log <- log10(tot.abu$total.abu+1)"
"0",""
"0",""
"0","# Function to calculate standard error"
"0","se <- function(x) sqrt(var(x, na.rm = TRUE) / length(na.omit(x)))"
"0",""
"0","# Calculate mean abundance and standard error for Control"
"0","control_mean <- tot.abu %>% filter(Treatment == ""Control"") %>%"
"0","  group_by(Day) %>%"
"0","  summarize(control_mean_abu = mean(tot.abu_log, na.rm = TRUE))"
"0",""
"0","# Calculate differences from Control for each treatment"
"0","tot.abu_diff <- tot.abu %>%"
"0","  left_join(control_mean, by = ""Day"") %>%"
"0","  mutate(diff_abu = tot.abu_log - control_mean_abu)"
"0",""
"0","# Summarize the data for plotting"
"0","tot_abu_dynamics <- tot.abu_diff %>%"
"0","  group_by(Treatment, Day) %>%"
"0","  summarize(mean_diff_abu = mean(diff_abu, na.rm = TRUE), se = se(diff_abu)) %>%"
"0","  mutate(lower_y = mean_diff_abu - se, upper_y = mean_diff_abu + se)"
"1","[38;5;250m`summarise()` has grouped output by 'Treatment'. You can override using the `.groups` argument.[39m
"
"0","# Determine the y-axis limits to ensure alignment of zero line"
"0","y_limits <- range(tot_abu_dynamics$mean_diff_abu + tot_abu_dynamics$se, "
"0","                  tot_abu_dynamics$mean_diff_abu - tot_abu_dynamics$se)"
"0",""
"0","# Filter out the control treatment for the plot"
"0",""
"0","abundance_plot <- ggplot(tot_abu_dynamics, aes(x = Day, y = mean_diff_abu, color = Treatment, fill = Treatment)) +"
"0","  geom_line(aes(group = Treatment), size = 1) +"
"0","  geom_point()+"
"0","  geom_ribbon(aes(ymin = lower_y, ymax = upper_y, group = Treatment), alpha = 0.1, show.legend = FALSE) +"
"0","  ylab(""Phytoplankton \nDifference in ln(abundance) (ind/mesocosm)"") +"
"0","  xlab(""Day"") +"
"0","  viridis::scale_colour_viridis(name = ""Treatment"", discrete = TRUE, end = 0.8, begin = 0.1, option = ""inferno"") +"
"0","  viridis::scale_fill_viridis(name = ""Treatment"", discrete = TRUE, end = 0.8, begin = 0.1, option = ""inferno"") +"
"0","  scale_x_continuous(limits = c(-5, 40)) +"
"0","  theme(legend.position = ""top"") +"
"0","  theme_bw() +"
"0","  guides(fill = guide_legend(override.aes = list(size = 8), ncol = 6)) +"
"0","  geom_hline(yintercept = 0, linetype = ""dashed"") +"
"0","  coord_cartesian(ylim = y_limits) +  # Set the y-axis limits to align the zero line"
"0","  annotate(""rect"", xmin = 0, xmax = 6, ymin = -Inf, ymax = Inf, alpha = 0.1, fill = ""red"") +"
"0","  annotate(""rect"", xmin = 14, xmax = 20, ymin = -Inf, ymax = Inf, alpha = 0.1, fill = ""red"") +"
"0","  annotate(""rect"", xmin = 28, xmax = 34, ymin = -Inf, ymax = Inf, alpha = 0.1, fill = ""red"")+"
"0","  theme(legend.position = ""none"")"
"0",""
