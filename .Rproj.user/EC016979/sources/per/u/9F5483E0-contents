
rm(list=ls()) #Empty the environment

library(tidyverse)
library(readxl)
library(patchwork)



#### Chlorophyll a ####
dd_eve <- read_excel("data/DataMesocosms2021.xlsx", 
                 sheet = "Metabolism Evening")

# keep only oxygen data
ox_eve <- dd_eve[, c(1,3,4,8)]
ox_eve <- ox_eve %>% filter(Day <= 38)

# Modify the Day column for specific values
ox_eve <- ox_eve %>%
  mutate(Day = ifelse(Day == 17, 15, ifelse(Day == 31, 30, Day)))

ox_eve <- ox_eve %>% rename(ox_eve = `DO (mg/L)`)
  
  
  
dd_morning <- read_excel("data/DataMesocosms2021.xlsx", 
                     sheet = "Metabolism Morning")

# keep only oxygen data
ox_morning <- dd_morning[, c(1,3,4,8)]
ox_morning <- ox_morning %>% filter(Day <= 38)

ox_morning <- ox_morning %>%
  mutate(Day = ifelse(Day == 17, 15, ifelse(Day == 31, 30, Day)))

ox_morning <- ox_morning %>% rename(ox_morning = `DO (mg/L)`)


ox <- merge(ox_eve, ox_morning, by = c("Day", "Treatment", "Cosm"))

ox <- ox %>% mutate(respiration = (ox_morning - ox_eve))

ox <- ox %>% filter(Treatment %in% c("CO/A", "CO/HW") )

                    
se <- function(x) sqrt(var(x, na.rm = TRUE) / length(na.omit(x)))





# Calculate mean abundance and standard error for Control
control_mean <- ox %>% filter(Treatment == "CO/A") %>%
  group_by(Day) %>%
  summarize(control_mean_resp = mean(respiration, na.rm = TRUE))

# Calculate differences from Control for each treatment
tot.resp_diff <- ox %>%
  left_join(control_mean, by = "Day") %>%
  mutate(diff_resp = respiration - control_mean_resp)

# Summarize the data for plotting
tot_resp_dynamics <- tot.resp_diff %>%
  group_by(Treatment, Day) %>%
  summarize(mean_diff_resp = mean(diff_resp, na.rm = TRUE), se = se(diff_resp)) %>%
  mutate(lower_y = mean_diff_resp - se, upper_y = mean_diff_resp + se)

# Determine the y-axis limits to ensure alignment of zero line
y_limits <- range(tot_resp_dynamics$mean_diff_resp + tot_resp_dynamics$se, 
                  tot_resp_dynamics$mean_diff_resp - tot_resp_dynamics$se)

# Filter out the control treatment for the plot
tot_resp_dynamics_filtered <- tot_resp_dynamics %>% filter(Treatment == "CO/HW")


resp_plot <- ggplot(tot_resp_dynamics_filtered, aes(x = Day, y = mean_diff_resp, color = Treatment, fill = Treatment)) +
  geom_line(aes(group = Treatment), size = 1, color = "blue") +
  geom_point(size = 2, color = "blue") +
  geom_ribbon(aes(ymin = lower_y, ymax = upper_y, group = Treatment), alpha = 0.1, show.legend = FALSE, fill = "blue", color = "blue") +
  ylab("Dissolved respygen \nDifference in mg/L") +
  xlab("Day") +
  viridis::scale_colour_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  viridis::scale_fill_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  scale_x_continuous(limits = c(-5, 40)) +
  theme_bw() +
  theme(legend.position = "none",                   # Remove legend
        text = element_text(size = 20),             # Increase text size for all text elements
        axis.title = element_text(size = 22),       # Increase axis title size
        plot.title = element_text(size = 24),       # Increase plot title size
        axis.text = element_text(size = 20),        # Increase axis text size
        axis.line = element_line(size = 0.5),       # Adjust axis line thickness
        panel.grid.major = element_blank(),         # Remove major gridlines
        panel.grid.minor = element_blank(),         # Remove minor gridlines
        panel.border = element_blank(),            # Remove panel borders
        panel.background = element_blank()) +      # Remove panel background
  
  geom_hline(yintercept = 0, linetype = "dashed") +
  coord_cartesian(ylim = y_limits) + 
  annotate("rect", xmin = 0, xmax = 6, ymin = -Inf, ymax = Inf, alpha = 0.3, fill = "red") +
  annotate("rect", xmin = 14, xmax = 20, ymin = -Inf, ymax = Inf, alpha = 0.3, fill = "red") +
  annotate("rect", xmin = 28, xmax = 34, ymin = -Inf, ymax = Inf, alpha = 0.3, fill = "red") + labs(tag = "(a)")

resp_plot

ox

model_ox <- lmer(log10(abs(respiration)) ~ Treatment * Day + (1 | Cosm), data = ox)




check_model(model_ox)


anova(model_ox)

# Create a tidy summary
tidy_summary <- tidy(model_ox)

# Calculate 95% confidence intervals
conf_intervals <- confint(model_ox, level = 0.95)

# Convert conf_intervals to a data frame and set appropriate column names
conf_intervals_df <- as.data.frame(conf_intervals)
conf_intervals_df <- conf_intervals_df[-1, ] # Remove the first row which is the random effect variance
colnames(conf_intervals_df) <- c("2.5%", "97.5%")

# Add the confidence intervals to the tidy summary
tidy_summary <- cbind(tidy_summary[c(1:4), ], conf_intervals_df[ c(2:5), ])

# Print the summary in RMarkdown with kableExtra for formatting
tidy_summary %>%
  mutate(across(where(is.numeric), ~ round(., 3))) %>%
  kable(format = "html", escape = FALSE) %>%
  kable_styling(full_width = FALSE)


# get only chla and rename

chla_add <- dd_add[, c(1:4,13)]
chla_add <- chla_add %>% rename(chla = "chla (µg/L)" )


chla <- dd[, c(1:4,13)]
chla <- chla %>% rename(chla = "chla (µg/L)" )

chla <- rbind(chla, chla_add)
# remove unwanted treatments
unique(dd$Treatment)
target <- c("CO/A", "CO/HW", "A/C1", "HW/C1")
chla <- chla %>% filter(Treatment %in% target)

### Log10 chla
chla$chla_log <- log10(chla$chla+1)


# visualise chla over the experimental time by treatment 

chla$Treatment <- factor(chla$Treatment, levels = c("CO/A", "CO/HW", "A/C1", "HW/C1"))

se <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x)))

tot_chla_dynamics <- chla %>% group_by(Treatment, Day, color=Treatment, fill=Treatment) %>%
  dplyr::summarize(mean_chl = mean((chla), na.rm=T), se= se(chla)) %>%
  mutate(lower_y = mean_chl-se, upper_y = mean_chl+se) %>% 
  ggplot(aes(y=mean_chl, x=Day)) + geom_line(aes(colour=Treatment, group=Treatment), linewidth = 3) +
  geom_ribbon(alpha=.1, aes(ymin=lower_y, ymax=upper_y, group=Treatment, fill=Treatment),show.legend = FALSE) +
  ylab("Chlorophyll - a (µg/L)") + xlab("Day") +
  viridis::scale_colour_viridis(name ="Treatment", discrete=T, end = 0.8,begin = 0.1, option = "magma") +
  viridis::scale_fill_viridis(name ="Treatment", discrete=T, end = 0.8,begin = 0.1, option = "magma") +
  scale_x_continuous(limits = c(-5,80), breaks = c(-4,10,24,38,52,66,80)) +
  theme(legend.position="top") + 
  theme_bw()+
  guides( fill = guide_legend(override.aes = list(size = 8), ncol = 6))

tot_chla_dynamics


# get only PE and rename

PE_add <- dd_add[, c(1:4,14)]
PE_add <- PE_add %>% rename(PE = "PE (µg/L)" )


PE <- dd[, c(1:4,14)]
PE <- PE %>% rename(PE = "PE (µg/L)" )

PE <- rbind(PE, PE_add)
# remove unwanted treatments
unique(dd$Treatment)
target <- c("CO/A", "CO/HW", "A/C1", "HW/C1")
PE <- PE %>% filter(Treatment %in% target)

### Log10 PE
PE$PE_log <- log10(PE$PE+1)


# visualise PE over the experimental time by treatment 

PE$Treatment <- factor(PE$Treatment, levels = c("CO/A", "A/C1", "CO/HW", "HW/C1"))

se <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x)))

tot_PE_dynamics <- PE %>% group_by(Treatment, Day, color=Treatment, fill=Treatment) %>%
  dplyr::summarize(mean_chl = mean((PE), na.rm=T), se= se(PE)) %>%
  mutate(lower_y = mean_chl-se, upper_y = mean_chl+se) %>% 
  ggplot(aes(y=mean_chl, x=Day)) + geom_line(aes(colour=Treatment, group=Treatment), linewidth = 3) +
  geom_ribbon(alpha=.1, aes(ymin=lower_y, ymax=upper_y, group=Treatment, fill=Treatment),show.legend = FALSE) +
  ylab("Chlorophyll - a (µg/L)") + xlab("Day") +
  viridis::scale_colour_viridis(name ="Treatment", discrete=T, end = 0.8,begin = 0.1, option = "magma") +
  viridis::scale_fill_viridis(name ="Treatment", discrete=T, end = 0.8,begin = 0.1, option = "magma") +
  scale_x_continuous(limits = c(-5,80), breaks = c(-4,10,24,38,52,66,80)) +
  theme(legend.position="top") + 
  theme_bw()+
  guides( fill = guide_legend(override.aes = list(size = 8), ncol = 6))

tot_PE_dynamics


# Calculate mean abundance and standard error for Control
control_mean <- chla %>% filter(Treatment == "CO/A") %>%
  group_by(Day) %>%
  summarize(control_mean_chla = mean(chla, na.rm = TRUE))

# Calculate differences from Control for each treatment
tot.chla_diff <- chla %>%
  left_join(control_mean, by = "Day") %>%
  mutate(diff_chla = chla - control_mean_chla)

# Summarize the data for plotting
tot_chla_dynamics <- tot.chla_diff %>%
  group_by(Treatment, Day) %>%
  summarize(mean_diff_chla = mean(diff_chla, na.rm = TRUE), se = se(diff_chla)) %>%
  mutate(lower_y = mean_diff_chla - se, upper_y = mean_diff_chla + se)

# Determine the y-axis limits to ensure alignment of zero line
y_limits <- range(tot_chla_dynamics$mean_diff_chla + tot_chla_dynamics$se, 
                  tot_chla_dynamics$mean_diff_chla - tot_chla_dynamics$se)

# Filter out the control treatment for the plot
tot_chla_dynamics_filtered <- tot_chla_dynamics %>% filter(Treatment != "CO/A")
data_chla_plot <- tot_chla_dynamics_filtered %>% filter(Day <= 60)
# Plot the data with faceting and aligned y-axis
chla_plot <- ggplot(data_chla_plot, aes(x = Day, y = mean_diff_chla, color = Treatment, fill = Treatment)) +
  geom_line(aes(group = Treatment), size = 1) +
  geom_ribbon(aes(ymin = lower_y, ymax = upper_y, group = Treatment), alpha = 0.1, show.legend = FALSE) +
  ylab("Chlorophyll-a \nDifference in µg/L") +
  xlab("Day") +
  viridis::scale_colour_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  viridis::scale_fill_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  scale_x_continuous(limits = c(-5, 60)) +
  theme(legend.position = "top") +
  theme_bw() +
  guides(fill = guide_legend(override.aes = list(size = 8), ncol = 6)) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  facet_wrap(~ Treatment, scales = "fixed") + 
  coord_cartesian(ylim = y_limits)  # Set the y-axis limits to align the zero line

chla_plot
ggsave("chla_dynamics.png", chla_plot, width = 12, height = 8)
ggsave("chla_dynamics.pdf", chla_plot, width = 12, height = 8)



# Calculate mean abundance and standard error for Control
control_mean <- chla %>% filter(Treatment == "CO/A") %>%
  group_by(Day) %>%
  summarize(control_mean_chla = mean(chla_log, na.rm = TRUE))

# Calculate differences from Control for each treatment
chla_diff <- chla %>%
  left_join(control_mean, by = "Day") %>%
  mutate(diff_chla = chla_log - control_mean_chla)

# Summarize the data for plotting
tot_chla_dynamics <- chla_diff %>%
  group_by(Treatment, Day) %>%
  summarize(mean_diff_chla = mean(diff_chla, na.rm = TRUE), se = se(diff_chla)) %>%
  mutate(lower_y = mean_diff_chla - se, upper_y = mean_diff_chla + se)

# Plot the data
chla_plot <- ggplot(tot_chla_dynamics, aes(x = Day, y = mean_diff_chla, color = Treatment, fill = Treatment)) +
  geom_line(aes(group = Treatment), size = 3) +
  geom_ribbon(aes(ymin = lower_y, ymax = upper_y, group = Treatment), alpha = 0.1, show.legend = FALSE) +
  ylab("Difference in Density (ind/L)") +
  xlab("Day") +
  viridis::scale_colour_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  viridis::scale_fill_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  scale_x_continuous(limits = c(-5, 80)) +
  theme(legend.position = "top") +
  theme_bw() +
  guides(fill = guide_legend(override.aes = list(size = 8), ncol = 6)) +
  geom_hline(yintercept = 0, linetype = "dashed")

chla_plot


#### Biomass ####
### load abundance data ###
dd <- read_excel("data/TrophicNetworkCosm2021.xlsx", sheet = "biomass")
names(dd)
unique(dd$Treatment)
dd_phyto <- dd[,1:96]
target <- c("Control","HW_C0", "A_C1", "HW_C1")
dd_phyto <- dd_phyto %>% filter(Treatment %in% target)

tot.bio <- dd_phyto[, c(1:7)]
tot.bio<-as.data.frame(tot.bio) 
tot.bio$total.bio<- rowSums(dd_phyto[, c(8:96)])

### Log10 abundance
tot.bio$tot.bio_log <- log10(tot.bio$total.bio+1)
### biomass dynamics ###


# Function to calculate standard error
se <- function(x) sqrt(var(x, na.rm = TRUE) / length(na.omit(x)))

# Calculate mean abundance and standard error for Control
control_mean <- tot.bio %>% filter(Treatment == "Control") %>%
  group_by(Day) %>%
  summarize(control_mean_bio = mean(tot.bio_log, na.rm = TRUE))

# Calculate differences from Control for each treatment
tot.bio_diff <- tot.bio %>%
  left_join(control_mean, by = "Day") %>%
  mutate(diff_bio = tot.bio_log - control_mean_bio)

# Summarize the data for plotting
tot.bio <- tot.bio %>%
  group_by(Treatment, Day) %>%
  summarize(mean_bio = mean(tot.bio_log, na.rm = TRUE), se = se(tot.bio_log)) %>%
  mutate(lower_y = mean_bio - se, upper_y = mean_bio + se)

# Determine the y-axis limits to ensure alignment of zero line
y_limits <- range(tot.bio$mean_bio + tot.bio$se, 
                  tot.bio$mean_bio - tot.bio$se)

# Filter out the control treatment for the plot
tot.bio <- tot.bio %>% filter(Treatment %in% c("Control", "HW_C0"))
tot.bio <- tot.bio %>% filter(Day <= 40)
# Plot the data with faceting and aligned y-axis
bio_plot <- ggplot(tot.bio, aes(x = Day, y = mean_bio, color = Treatment, fill = Treatment)) +
  geom_line(aes(group = Treatment), size = 1) +
  geom_ribbon(aes(ymin = lower_y, ymax = upper_y, group = Treatment), alpha = 0.1, show.legend = FALSE) +
  ylab("Phytoplankton \nDifference in biomass (ind/mesocosm)") +
  xlab("Day") +
  viridis::scale_colour_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  viridis::scale_fill_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  theme(legend.position = "top") +
  theme_bw() +
  coord_cartesian(ylim = y_limits)  # Set the y-axis limits to align the zero line

bio_plot




## zoop
dd_zoo <- dd[,c(1:3, 97:118)]
dd_zoo[is.na(dd_zoo)] <- 0

dd_zoo <- dd_zoo %>% filter(Treatment %in% c("Control","HW_C0")) %>% filter(Day <= 40) %>% 
  mutate(Treatment = ifelse(Treatment == "HW_C0", "HW", Treatment))


write.csv(dd_zoo_long, "data/zoop.csv", quote = FALSE, row.names = FALSE)


# Transform dataset to long format
dd_zoo_long <- dd_zoo %>%
  pivot_longer(
    cols = Simocephalus:Cephalodella,     # Specify the range of taxa columns
    names_to = "taxa",               # New column to hold the taxa names
    values_to = "biomass"          # New column to hold the corresponding values
  )


dd_zoo_long <- dd_zoo_long %>% 
  group_by( Treatment, Day) %>%
  mutate(total = sum(biomass)) %>%
  mutate(relative_bio = biomass / total * 100) %>%
  ungroup() 

# Create the new column "group" based on "taxa"
dd_zoo_long <- dd_zoo_long %>%
  mutate(group = case_when(
    taxa %in% c("Simocephalus", "Chydorus", "Daphnia.longispina", "Alona", "Alonella", "Ceriodaphnia") ~ "Cladocerans",
    taxa %in% c("Cyclopoida", "Calanoida", "Nauplii") ~ "Copepods",
    taxa == "Ostracoda" ~ "Ostracoda",
    TRUE ~ "Rotifers"  # For all other taxa
  ))

dd_zoo_long_per <- dd_zoo_long[,-c(4,6,7)] %>%
  group_by( Treatment, Day, group) %>%
  summarize(total_group = sum(biomass)) %>%
  mutate(total_bio = sum(total_group)) %>% 
  mutate(relative_bio = total_group / total_bio * 100) 
  
  
  
  mutate(total_group = sum(biomass)) %>%
  mutate(relative_bio = biomass / total_group * 100) %>%
  ungroup() 

try2 <- dd_zoo_long[, -c(4,6,7)] %>% group_by(Mesocosm.No, Treatment, Day)  %>% ungroup() 
try2 <- try2 %>% mutate(bio_log = log10(biomass+1))
# Calculate mean abundance and standard error for Control
control_mean <- try2 %>% filter(Treatment == "Control") %>%
  group_by(Day) %>%
  summarize(control_mean_bio = mean(bio_log, na.rm = TRUE))

# Calculate differences from Control for each treatment
tot.bio_diff <- try2 %>%
  left_join(control_mean, by = "Day") %>%
  mutate(diff_bio = bio_log - control_mean_bio)

# Summarize the data for plotting
tot_bio_dynamics <- tot.bio_diff %>%
  group_by(Treatment, Day) %>%
  summarize(mean_diff_bio = mean(diff_bio, na.rm = TRUE), se = se(diff_bio)) %>%
  mutate(lower_y = mean_diff_bio - se, upper_y = mean_diff_bio + se)

# Determine the y-axis limits to ensure alignment of zero line
y_limits <- range(tot_bio_dynamics$mean_diff_bio + tot_bio_dynamics$se, 
                  tot_bio_dynamics$mean_diff_bio - tot_bio_dynamics$se)

# Filter out the control treatment for the plot
tot_bio_dynamics_filtered <- tot_bio_dynamics

tot_bio_dynamics_filtered <- tot_bio_dynamics_filtered %>% filter(Treatment != "Control")
# Plot the data with faceting and aligned y-axis
bio_plot <- ggplot(tot_bio_dynamics_filtered, aes(x = Day, y = mean_diff_bio, color = Treatment, fill = Treatment)) +
  geom_line(aes(group = Treatment), size = 1, color = "blue") +
  geom_point(size = 2, color = "blue") +
  geom_ribbon(aes(ymin = lower_y, ymax = upper_y, group = Treatment), alpha = 0.1, show.legend = FALSE, fill = "blue", color = "blue") +
  ylab("Zooplankton \nDifference in log10(biomass)") +
  xlab("Day") +
  viridis::scale_colour_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  viridis::scale_fill_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  theme(legend.position = "top") +
  theme_bw() +
  guides(fill = guide_legend(override.aes = list(size = 8), ncol = 6)) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  coord_cartesian(ylim = y_limits) + 
  annotate("rect", xmin = 0, xmax = 6, ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "red") +
  annotate("rect", xmin = 14, xmax = 20, ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "red") +
  annotate("rect", xmin = 28, xmax = 34, ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "red") +
  theme(legend.position = "none")

bio_plot


unique(dd_zoo_long$taxa)

names(dd_zoo)
tot.bio <- dd_zoo[, c(1:3)]
tot.bio<-as.data.frame(tot.bio) 
tot.bio$total.bio<- rowSums(dd_zoo[, c(4:26)])



# Function to calculate standard error
se <- function(x) sqrt(var(x, na.rm = TRUE) / length(na.omit(x)))

# Calculate mean abundance and standard error for Control
control_mean <- tot.bio %>% filter(Treatment == "Control") %>%
  group_by(Day) %>%
  summarize(control_mean_bio = mean(total.bio, na.rm = TRUE))

# Calculate differences from Control for each treatment
tot.bio_diff <- tot.bio %>%
  left_join(control_mean, by = "Day") %>%
  mutate(diff_bio = total.bio - control_mean_bio)

# Summarize the data for plotting
tot_bio_dynamics <- tot.bio_diff %>%
  group_by(Treatment, Day) %>%
  summarize(mean_diff_bio = mean(diff_bio, na.rm = TRUE), se = se(diff_bio)) %>%
  mutate(lower_y = mean_diff_bio - se, upper_y = mean_diff_bio + se)

# Determine the y-axis limits to ensure alignment of zero line
y_limits <- range(tot_bio_dynamics$mean_diff_bio + tot_bio_dynamics$se, 
                  tot_bio_dynamics$mean_diff_bio - tot_bio_dynamics$se)

# Filter out the control treatment for the plot
tot_bio_dynamics_filtered <- tot_bio_dynamics %>% filter(Treatment != "Control")
tot_bio_dynamics_filtered <- tot_bio_dynamics_filtered %>% filter(Day <= 40)
# Plot the data with faceting and aligned y-axis
bio_plot_zoo <- ggplot(tot_bio_dynamics_filtered, aes(x = Day, y = mean_diff_bio, color = Treatment, fill = Treatment)) +
  geom_line(aes(group = Treatment), size = 1) +
  geom_ribbon(aes(ymin = lower_y, ymax = upper_y, group = Treatment), alpha = 0.1, show.legend = FALSE) +
  ylab("Zooplannkton \nDifference in biomass (g/mesocosm)") +
  xlab("Day") +
  viridis::scale_colour_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  viridis::scale_fill_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  theme(legend.position = "top") +
  theme_bw() +
  guides(fill = guide_legend(override.aes = list(size = 8), ncol = 6)) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  facet_wrap(~ Treatment, scales = "fixed") + 
  coord_cartesian(ylim = y_limits)  # Set the y-axis limits to align the zero line

bio_plot / bio_plot_zoo

legend <- get_legend(
  ggplot(tot_bio_dynamics_filtered, aes(x = Day, y = mean_diff_bio, color = Treatment, fill = Treatment)) +
    geom_line(aes(group = Treatment), size = 1) +
    geom_ribbon(aes(ymin = lower_y, ymax = upper_y, group = Treatment), alpha = 0.1) +
    viridis::scale_colour_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
    viridis::scale_fill_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
    theme(legend.position = "top") +
    guides(fill = guide_legend(override.aes = list(size = 8), ncol = 6))
)

# Combine the plots with the common legend
combined_plot <- (bio_plot / bio_plot_zoo) + plot_layout(guides = 'collect') & theme(legend.position = 'right')

# Display the combined plot
print(combined_plot)


ggsave("phyto_zoo_dynamics.png", combined_plot, width = 12, height = 8)
ggsave("phyto_zoo_dynamics.pdf", combined_plot, width = 12, height = 8)







# Load necessary libraries
library(dplyr)
library(ggplot2)

# Sample data (for demonstration purposes)
chla <- data.frame(
  Day = c(-4, -4, -4, -4, -4, -4, -4, -4, 3, 3, 3, 3, 3, 3, 3, 3, 10, 10, 10, 10, 10, 10, 10, 10, 15, 15, 15, 15, 15, 15, 15, 15, 24, 24, 24, 24, 24, 24, 24, 24, 30, 30, 30, 30, 30, 30, 30, 30, 38, 38, 38, 38, 38, 38, 38, 38),
  Date = as.character(c(44307, 44307, 44307, 44307, 44307, 44307, 44307, 44307, 44310, 44310, 44310, 44310, 44310, 44310, 44310, 44310, 44317, 44317, 44317, 44317, 44317, 44317, 44317, 44317, 44324, 44324, 44324, 44324, 44324, 44324, 44324, 44324, 44330, 44330, 44330, 44330, 44330, 44330, 44330, 44330, 44338, 44338, 44338, 44338, 44338, 44338, 44338, 44338, 44348, 44348, 44348, 44348, 44348, 44348, 44348, 44348)),
  Treatment = rep(c("HW", "HW", "Control", "Control", "Control", "HW", "Control", "HW"), each = 7),
  Cosm = rep(c(2, 6, 14, 15, 17, 19, 22, 24), 7),
  chla = runif(56, 10, 12) # random data
)

# Calculate mean chla for Control by day
control_bm <- chla %>% 
  filter(Treatment == "Control") %>%
  group_by(Day) %>% 
  dplyr::summarize(mean_chla_control = mean(chla, na.rm = TRUE))

# Calculate mean chla for all treatments by day and cosm
chla_all_treat <- chla %>% 
  group_by(Day, Cosm, Treatment) %>% 
  dplyr::summarize(mean_chla = mean(chla, na.rm = TRUE))

# Merge the control and treatment data
chla_merged <- merge(chla_all_treat, control_bm, by = "Day")

# Remove Day -4
chla_merged <- chla_merged %>% 
  filter(Day != -4)

# Calculate the difference between HW and control
chla_merged <- chla_merged %>% 
  mutate(diff = mean_chla - mean_chla_control)

# Filter HW data
hw_data <- chla_merged %>% filter(Treatment == "HW")

# Define day ranges
day_ranges <- list(c(3, 10), c(15, 24), c(30, 38))

# Add a range column to hw_data with the correct order
hw_data <- hw_data %>% 
  mutate(range = case_when(
    Day >= 3 & Day <= 10 ~ "3-10",
    Day >= 15 & Day <= 24 ~ "15-24",
    Day >= 30 & Day <= 38 ~ "30-38",
    TRUE ~ NA_character_
  )) %>%
  filter(!is.na(range))

# Set the order of the range levels
hw_data$range <- factor(hw_data$range, levels = c("3-10", "15-24", "30-38"))

# Function to fit linear model
fit_lm <- function(data) {
  lm_model <- lm(diff ~ Day, data = data)
  return(lm_model)
}

# Apply function to each day range and store models
lm_models <- hw_data %>%
  group_by(range) %>%
  do(model = fit_lm(.))

# Create a combined plot
combined_plot <- ggplot(hw_data, aes(x = Day, y = diff)) +
  geom_point(aes(color = as.factor(Cosm)), size = 3) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Day", y = "Difference (HW - Control)") +
  theme_minimal(base_size = 15) +
  theme(legend.position = "none") +
  facet_wrap(~ range, scales = "free", ncol = 3)

print(combined_plot)









# Calculate mean chla for Control by day
control_bm <- chla %>% 
  filter(Treatment == "Control") %>%
  group_by(Day) %>% 
  dplyr::summarize(mean_chla_control = mean(chla, na.rm = TRUE))

# Calculate mean chla for all treatments by day and cosm
chla_all_treat <- chla %>% 
  group_by(Day, Cosm, Treatment) %>% 
  dplyr::summarize(mean_chla = mean(chla, na.rm = TRUE))

# Merge the control and treatment data
chla_merged <- merge(chla_all_treat, control_bm, by = "Day")

# Remove Day -4
chla_merged <- chla_merged %>% 
  filter(Day != -4)

# Calculate the difference between HW and control
chla_merged <- chla_merged %>% 
  mutate(diff = mean_chla - mean_chla_control)

# Filter HW data
hw_data <- chla_merged %>% filter(Treatment == "HW")

# Define day ranges
day_ranges <- list(c(3, 10), c(15, 24), c(30, 38))

# Add a range column to hw_data with the correct order
hw_data <- hw_data %>% 
  mutate(range = case_when(
    Day >= 3 & Day <= 10 ~ "3-10",
    Day >= 15 & Day <= 24 ~ "15-24",
    Day >= 30 & Day <= 38 ~ "30-38",
    TRUE ~ NA_character_
  )) %>%
  filter(!is.na(range))

# Set the order of the range levels
hw_data$range <- factor(hw_data$range, levels = c("3-10", "15-24", "30-38"))

# Function to fit linear model
fit_lm <- function(data) {
  lm_model <- lm(diff ~ Day, data = data)
  return(lm_model)
}

# Apply function to each day range and store models
lm_models <- hw_data %>%
  group_by(range) %>%
  do(model = fit_lm(.))

# Extract slopes
slopes <- lm_models %>%
  rowwise() %>%
  mutate(slope = coef(model)["Day"]) %>%
  select(range, slope) %>%
  ungroup()

# Create a combined plot
combined_plot <- ggplot(hw_data, aes(x = Day, y = diff)) +
  geom_point(aes(color = as.factor(Cosm)), size = 3) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Day", y = "Difference (HW - Control)") +
  theme_minimal(base_size = 15) +
  theme(legend.position = "none") +
  facet_wrap(~ range, scales = "free", ncol = 3)

# Add slope annotations
combined_plot <- combined_plot +
  geom_text(data = slopes, aes(x = Inf, y = Inf, label = paste0("Slope: ", round(slope, 3))), 
            hjust = 1.1, vjust = 1.1, size = 5)

print(combined_plot)









# Calculate mean ox for Control by day
control_bm <- ox %>% 
  filter(Treatment == "Control") %>%
  group_by(Day) %>% 
  dplyr::summarize(mean_ox_control = mean(ox, na.rm = TRUE))

# Calculate mean ox for all treatments by day and cosm
ox_all_treat <- ox %>% 
  group_by(Day, Cosm, Treatment) %>% 
  dplyr::summarize(mean_ox = mean(ox, na.rm = TRUE))

# Merge the control and treatment data
ox_merged <- merge(ox_all_treat, control_bm, by = "Day")

# Remove Day -4
ox_merged <- ox_merged %>% 
  filter(Day != -4)

# Calculate the difference between HW and control
ox_merged <- ox_merged %>% 
  mutate(diff = mean_ox - mean_ox_control)

# Filter HW data
hw_data <- ox_merged %>% filter(Treatment == "HW")

# Define day ranges
day_ranges <- list(c(3, 10), c(15, 24), c(30, 38))

# Add a range column to hw_data with the correct order
hw_data <- hw_data %>% 
  mutate(range = case_when(
    Day >= 3 & Day <= 10 ~ "3-10",
    Day >= 15 & Day <= 24 ~ "15-24",
    Day >= 30 & Day <= 38 ~ "30-38",
    TRUE ~ NA_character_
  )) %>%
  filter(!is.na(range))

# Set the order of the range levels
hw_data$range <- factor(hw_data$range, levels = c("3-10", "15-24", "30-38"))

# Function to fit linear model
fit_lm <- function(data) {
  lm_model <- lm(diff ~ Day, data = data)
  return(lm_model)
}

# Apply function to each day range and store models
lm_models <- hw_data %>%
  group_by(range) %>%
  do(model = fit_lm(.))

# Extract slopes
slopes <- lm_models %>%
  rowwise() %>%
  mutate(slope = coef(model)["Day"]) %>%
  select(range, slope) %>%
  ungroup()

# Create a combined plot
combined_plot <- ggplot(hw_data, aes(x = Day, y = diff)) +
  geom_point(aes(color = as.factor(Cosm)), size = 3) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Day", y = "Difference (HW - Control)") +
  theme_bw(base_size = 15) +
  theme(legend.position = "none") +
  facet_wrap(~ range, scales = "free", ncol = 3)

# Add slope annotations
combined_plot <- combined_plot +
  geom_text(data = slopes, aes(x = Inf, y = Inf, label = paste0("Slope: ", round(slope, 3))), 
            hjust = 1.1, vjust = 1.2, size = 5)

print(combined_plot)




# Add slope annotations inside the plots
combined_plot <- combined_plot +
  geom_text(data = slopes, aes(x = Inf, y = Inf, label = paste0("Slope: ", round(slope, 3))),
            hjust = 1.5, vjust = 1.2, size = 5)

# Add plot labels outside the plots
combined_plot <- combined_plot +
  annotate("text", x = -Inf, y = Inf, label = "(b)", hjust = 1.2, vjust = 2, size = 6) +
  annotate("text", x = -Inf, y = Inf, label = "(c)", hjust = 1.2, vjust = 2, size = 6, 
           data = subset(hw_data, range == "15-24")) +
  annotate("text", x = -Inf, y = Inf, label = "(d)", hjust = 1.2, vjust = 2, size = 6, 
           data = subset(hw_data, range == "30-38"))

print(combined_plot)


# Add slope annotations inside the plots
combined_plot <- combined_plot +
  geom_text(data = slopes, aes(x = Inf, y = Inf, label = paste0("Slope: ", round(slope, 3))),
            hjust = 1.5, vjust = 1.2, size = 5)

# Draw the combined plot
print(combined_plot)

# Add plot labels outside the plots
grid.text("(b)", x = unit(0.04, "npc"), y = unit(0.95, "npc"), gp = gpar(fontsize = 15, fontface = "bold"))
grid.text("(c)", x = unit(0.37, "npc"), y = unit(0.95, "npc"), gp = gpar(fontsize = 15, fontface = "bold"))
grid.text("(d)", x = unit(0.69, "npc"), y = unit(0.95, "npc"), gp = gpar(fontsize = 15, fontface = "bold"))




geom_point(aes(color = as.factor(Cosm)), size = 3) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Day", y = "Difference (HW - Control)") +
  theme_bw(base_size = 15) +
  theme(legend.position = "none") +
  facet_wrap(~ range, scales = "free", ncol = 3) +
  geom_text(data = slopes, aes(x = Inf, y = Inf, label = paste0("Slope: ", round(slope, 3))),
            hjust = 1.5, vjust = 1.2, size = 5)

# Add the outside labels using annotations
combined_plot <- combined_plot +
  annotate("text", x = -Inf, y = Inf, label = "(b)", hjust = -0.25, vjust = 1.2, size = 5, fontface = "bold") +
  annotate("text", x = -Inf, y = Inf, label = "(c)", hjust = 1.8, vjust = 1.2, size = 5, fontface = "bold") +
  annotate("text", x = -Inf, y = Inf, label = "(d)", hjust = 4.8, vjust = 1.2, size = 5, fontface = "bold")


