
rm(list=ls()) #Empty the environment

library(tidyverse)
library(readxl)
library(patchwork)



#### Chlorophyll a ####
dd <- read_excel("data/DataMesocosms2021.xlsx", 
                 sheet = "Metabolism Evening")

dd_add <- read_excel("data/Additional_metabolism_phyto.xlsx")
names(dd_add)

# get only chla and rename

chla_add <- dd_add[, c(1:4,13)]
chla_add <- chla_add %>% rename(chla = "chla (µg/L)" )


chla <- dd[, c(1:4,13)]
chla <- chla %>% rename(chla = "chla (µg/L)" )

chla <- rbind(chla, chla_add)
# remove unwanted treatments
unique(dd$Treatment)
target <- c("CO/A", "CO/HW", "A/C1", "HW/C1")
chla <- chla %>% filter(Treatment %in% target)

### Log10 chla
chla$chla_log <- log10(chla$chla+1)


# visualise chla over the experimental time by treatment 

chla$Treatment <- factor(chla$Treatment, levels = c("CO/A", "CO/HW", "A/C1", "HW/C1"))

se <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x)))

tot_chla_dynamics <- chla %>% group_by(Treatment, Day, color=Treatment, fill=Treatment) %>%
  dplyr::summarize(mean_chl = mean((chla), na.rm=T), se= se(chla)) %>%
  mutate(lower_y = mean_chl-se, upper_y = mean_chl+se) %>% 
  ggplot(aes(y=mean_chl, x=Day)) + geom_line(aes(colour=Treatment, group=Treatment), linewidth = 3) +
  geom_ribbon(alpha=.1, aes(ymin=lower_y, ymax=upper_y, group=Treatment, fill=Treatment),show.legend = FALSE) +
  ylab("Chlorophyll - a (µg/L)") + xlab("Day") +
  viridis::scale_colour_viridis(name ="Treatment", discrete=T, end = 0.8,begin = 0.1, option = "magma") +
  viridis::scale_fill_viridis(name ="Treatment", discrete=T, end = 0.8,begin = 0.1, option = "magma") +
  scale_x_continuous(limits = c(-5,80), breaks = c(-4,10,24,38,52,66,80)) +
  theme(legend.position="top") + 
  theme_bw()+
  guides( fill = guide_legend(override.aes = list(size = 8), ncol = 6))

tot_chla_dynamics


# get only PE and rename

PE_add <- dd_add[, c(1:4,14)]
PE_add <- PE_add %>% rename(PE = "PE (µg/L)" )


PE <- dd[, c(1:4,14)]
PE <- PE %>% rename(PE = "PE (µg/L)" )

PE <- rbind(PE, PE_add)
# remove unwanted treatments
unique(dd$Treatment)
target <- c("CO/A", "CO/HW", "A/C1", "HW/C1")
PE <- PE %>% filter(Treatment %in% target)

### Log10 PE
PE$PE_log <- log10(PE$PE+1)


# visualise PE over the experimental time by treatment 

PE$Treatment <- factor(PE$Treatment, levels = c("CO/A", "A/C1", "CO/HW", "HW/C1"))

se <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x)))

tot_PE_dynamics <- PE %>% group_by(Treatment, Day, color=Treatment, fill=Treatment) %>%
  dplyr::summarize(mean_chl = mean((PE), na.rm=T), se= se(PE)) %>%
  mutate(lower_y = mean_chl-se, upper_y = mean_chl+se) %>% 
  ggplot(aes(y=mean_chl, x=Day)) + geom_line(aes(colour=Treatment, group=Treatment), linewidth = 3) +
  geom_ribbon(alpha=.1, aes(ymin=lower_y, ymax=upper_y, group=Treatment, fill=Treatment),show.legend = FALSE) +
  ylab("Chlorophyll - a (µg/L)") + xlab("Day") +
  viridis::scale_colour_viridis(name ="Treatment", discrete=T, end = 0.8,begin = 0.1, option = "magma") +
  viridis::scale_fill_viridis(name ="Treatment", discrete=T, end = 0.8,begin = 0.1, option = "magma") +
  scale_x_continuous(limits = c(-5,80), breaks = c(-4,10,24,38,52,66,80)) +
  theme(legend.position="top") + 
  theme_bw()+
  guides( fill = guide_legend(override.aes = list(size = 8), ncol = 6))

tot_PE_dynamics


# Calculate mean abundance and standard error for Control
control_mean <- chla %>% filter(Treatment == "CO/A") %>%
  group_by(Day) %>%
  summarize(control_mean_chla = mean(chla, na.rm = TRUE))

# Calculate differences from Control for each treatment
tot.chla_diff <- chla %>%
  left_join(control_mean, by = "Day") %>%
  mutate(diff_chla = chla - control_mean_chla)

# Summarize the data for plotting
tot_chla_dynamics <- tot.chla_diff %>%
  group_by(Treatment, Day) %>%
  summarize(mean_diff_chla = mean(diff_chla, na.rm = TRUE), se = se(diff_chla)) %>%
  mutate(lower_y = mean_diff_chla - se, upper_y = mean_diff_chla + se)

# Determine the y-axis limits to ensure alignment of zero line
y_limits <- range(tot_chla_dynamics$mean_diff_chla + tot_chla_dynamics$se, 
                  tot_chla_dynamics$mean_diff_chla - tot_chla_dynamics$se)

# Filter out the control treatment for the plot
tot_chla_dynamics_filtered <- tot_chla_dynamics %>% filter(Treatment != "CO/A")
data_chla_plot <- tot_chla_dynamics_filtered %>% filter(Day <= 60)
# Plot the data with faceting and aligned y-axis
chla_plot <- ggplot(data_chla_plot, aes(x = Day, y = mean_diff_chla, color = Treatment, fill = Treatment)) +
  geom_line(aes(group = Treatment), size = 1) +
  geom_ribbon(aes(ymin = lower_y, ymax = upper_y, group = Treatment), alpha = 0.1, show.legend = FALSE) +
  ylab("Chlorophyll-a \nDifference in µg/L") +
  xlab("Day") +
  viridis::scale_colour_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  viridis::scale_fill_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  scale_x_continuous(limits = c(-5, 60)) +
  theme(legend.position = "top") +
  theme_bw() +
  guides(fill = guide_legend(override.aes = list(size = 8), ncol = 6)) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  facet_wrap(~ Treatment, scales = "fixed") + 
  coord_cartesian(ylim = y_limits)  # Set the y-axis limits to align the zero line

chla_plot
ggsave("chla_dynamics.png", chla_plot, width = 12, height = 8)
ggsave("chla_dynamics.pdf", chla_plot, width = 12, height = 8)



# Calculate mean abundance and standard error for Control
control_mean <- chla %>% filter(Treatment == "CO/A") %>%
  group_by(Day) %>%
  summarize(control_mean_chla = mean(chla_log, na.rm = TRUE))

# Calculate differences from Control for each treatment
chla_diff <- chla %>%
  left_join(control_mean, by = "Day") %>%
  mutate(diff_chla = chla_log - control_mean_chla)

# Summarize the data for plotting
tot_chla_dynamics <- chla_diff %>%
  group_by(Treatment, Day) %>%
  summarize(mean_diff_chla = mean(diff_chla, na.rm = TRUE), se = se(diff_chla)) %>%
  mutate(lower_y = mean_diff_chla - se, upper_y = mean_diff_chla + se)

# Plot the data
chla_plot <- ggplot(tot_chla_dynamics, aes(x = Day, y = mean_diff_chla, color = Treatment, fill = Treatment)) +
  geom_line(aes(group = Treatment), size = 3) +
  geom_ribbon(aes(ymin = lower_y, ymax = upper_y, group = Treatment), alpha = 0.1, show.legend = FALSE) +
  ylab("Difference in Density (ind/L)") +
  xlab("Day") +
  viridis::scale_colour_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  viridis::scale_fill_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  scale_x_continuous(limits = c(-5, 80)) +
  theme(legend.position = "top") +
  theme_bw() +
  guides(fill = guide_legend(override.aes = list(size = 8), ncol = 6)) +
  geom_hline(yintercept = 0, linetype = "dashed")

chla_plot


#### Biomass ####
### load abundance data ###
dd <- read_excel("data/TrophicNetworkCosm2021.xlsx", sheet = "biomass")
names(dd)
unique(dd$Treatment)
dd_phyto <- dd[,1:96]
target <- c("Control","HW_C0", "A_C1", "HW_C1")
dd_phyto <- dd_phyto %>% filter(Treatment %in% target)

tot.bio <- dd_phyto[, c(1:7)]
tot.bio<-as.data.frame(tot.bio) 
tot.bio$total.bio<- rowSums(dd_phyto[, c(8:96)])

### Log10 abundance
tot.bio$tot.bio_log <- log10(tot.bio$total.bio+1)
### biomass dynamics ###


# Function to calculate standard error
se <- function(x) sqrt(var(x, na.rm = TRUE) / length(na.omit(x)))

# Calculate mean abundance and standard error for Control
control_mean <- tot.bio %>% filter(Treatment == "Control") %>%
  group_by(Day) %>%
  summarize(control_mean_bio = mean(tot.bio_log, na.rm = TRUE))

# Calculate differences from Control for each treatment
tot.bio_diff <- tot.bio %>%
  left_join(control_mean, by = "Day") %>%
  mutate(diff_bio = tot.bio_log - control_mean_bio)

# Summarize the data for plotting
tot_bio_dynamics <- tot.bio_diff %>%
  group_by(Treatment, Day) %>%
  summarize(mean_diff_bio = mean(diff_bio, na.rm = TRUE), se = se(diff_bio)) %>%
  mutate(lower_y = mean_diff_bio - se, upper_y = mean_diff_bio + se)

# Determine the y-axis limits to ensure alignment of zero line
y_limits <- range(tot_bio_dynamics$mean_diff_bio + tot_bio_dynamics$se, 
                  tot_bio_dynamics$mean_diff_bio - tot_bio_dynamics$se)

# Filter out the control treatment for the plot
tot_bio_dynamics_filtered <- tot_bio_dynamics %>% filter(Treatment != "Control")
data_phyto_plot <- tot_bio_dynamics_filtered %>% filter(Day <= 60)
# Plot the data with faceting and aligned y-axis
bio_plot <- ggplot(tot_bio_dynamics_filtered, aes(x = Day, y = mean_diff_bio, color = Treatment, fill = Treatment)) +
  geom_line(aes(group = Treatment), size = 1) +
  geom_ribbon(aes(ymin = lower_y, ymax = upper_y, group = Treatment), alpha = 0.1, show.legend = FALSE) +
  ylab("Phytoplankton \nDifference in biomass (ind/mesocosm)") +
  xlab("Day") +
  viridis::scale_colour_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  viridis::scale_fill_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  scale_x_continuous(limits = c(-5, 60)) +
  theme(legend.position = "top") +
  theme_bw() +
  guides(fill = guide_legend(override.aes = list(size = 8), ncol = 6)) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  facet_wrap(~ Treatment, scales = "fixed") + 
  coord_cartesian(ylim = y_limits)  # Set the y-axis limits to align the zero line

bio_plot




## zoop
dd_zoo <- dd[,c(1:3, 97:119)]
dd_zoo[is.na(dd_zoo)] <- 0
target <- c("Control","HW_C0", "A_C1", "HW_C1")
dd_zoo <- dd_zoo %>% filter(Treatment %in% target)
names(dd_zoo)
tot.bio <- dd_zoo[, c(1:3)]
tot.bio<-as.data.frame(tot.bio) 
tot.bio$total.bio<- rowSums(dd_zoo[, c(4:26)])



# Function to calculate standard error
se <- function(x) sqrt(var(x, na.rm = TRUE) / length(na.omit(x)))

# Calculate mean abundance and standard error for Control
control_mean <- tot.bio %>% filter(Treatment == "Control") %>%
  group_by(Day) %>%
  summarize(control_mean_bio = mean(total.bio, na.rm = TRUE))

# Calculate differences from Control for each treatment
tot.bio_diff <- tot.bio %>%
  left_join(control_mean, by = "Day") %>%
  mutate(diff_bio = total.bio - control_mean_bio)

# Summarize the data for plotting
tot_bio_dynamics <- tot.bio_diff %>%
  group_by(Treatment, Day) %>%
  summarize(mean_diff_bio = mean(diff_bio, na.rm = TRUE), se = se(diff_bio)) %>%
  mutate(lower_y = mean_diff_bio - se, upper_y = mean_diff_bio + se)

# Determine the y-axis limits to ensure alignment of zero line
y_limits <- range(tot_bio_dynamics$mean_diff_bio + tot_bio_dynamics$se, 
                  tot_bio_dynamics$mean_diff_bio - tot_bio_dynamics$se)

# Filter out the control treatment for the plot
tot_bio_dynamics_filtered <- tot_bio_dynamics %>% filter(Treatment != "Control")

# Plot the data with faceting and aligned y-axis
bio_plot_zoo <- ggplot(tot_bio_dynamics_filtered, aes(x = Day, y = mean_diff_bio, color = Treatment, fill = Treatment)) +
  geom_line(aes(group = Treatment), size = 1) +
  geom_ribbon(aes(ymin = lower_y, ymax = upper_y, group = Treatment), alpha = 0.1, show.legend = FALSE) +
  ylab("Zooplannkton \nDifference in biomass (g/mesocosm)") +
  xlab("Day") +
  viridis::scale_colour_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  viridis::scale_fill_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
  scale_x_continuous(limits = c(-5, 80)) +
  theme(legend.position = "top") +
  theme_bw() +
  guides(fill = guide_legend(override.aes = list(size = 8), ncol = 6)) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  facet_wrap(~ Treatment, scales = "fixed") + 
  coord_cartesian(ylim = y_limits)  # Set the y-axis limits to align the zero line

bio_plot / bio_plot_zoo

legend <- get_legend(
  ggplot(tot_bio_dynamics_filtered, aes(x = Day, y = mean_diff_bio, color = Treatment, fill = Treatment)) +
    geom_line(aes(group = Treatment), size = 1) +
    geom_ribbon(aes(ymin = lower_y, ymax = upper_y, group = Treatment), alpha = 0.1) +
    viridis::scale_colour_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
    viridis::scale_fill_viridis(name = "Treatment", discrete = TRUE, end = 0.8, begin = 0.1, option = "inferno") +
    theme(legend.position = "top") +
    guides(fill = guide_legend(override.aes = list(size = 8), ncol = 6))
)

# Combine the plots with the common legend
combined_plot <- (bio_plot / bio_plot_zoo) + plot_layout(guides = 'collect') & theme(legend.position = 'right')

# Display the combined plot
print(combined_plot)


ggsave("phyto_zoo_dynamics.png", combined_plot, width = 12, height = 8)
ggsave("phyto_zoo_dynamics.pdf", combined_plot, width = 12, height = 8)
